name: docker
on:
  workflow_dispatch: # manually run
    inputs:
      release:
        description: 'Release name for tagging'
        required: true
        default: 'arrowsquid'
      tag:
        description: 'Tag name'
        required: true
        default: 'latest'
      custom_tag:
        description: 'Custom tag (e.g. commit hash)'
        required: false
      is_test_build:
        description: 'Whether this is a test build (uses simplified tagging)'
        type: boolean
        required: false
        default: false
      images:
        description: 'Space-separated list of images to publish (leave empty for all)'
        required: false

env:
  CI: true

jobs:
  publish:
    name: docker-publish
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          use: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get branch name
        id: branch_name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Get commit short SHA
        id: commit_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and Publish
        run: |
          CUSTOM_TAG="${{ inputs.custom_tag }}"
          if [ -z "$CUSTOM_TAG" ] && [[ "${{ steps.branch_name.outputs.branch }}" != release/* ]]; then
            CUSTOM_TAG="${{ steps.commit_sha.outputs.sha }}"
          fi
          
          IS_TEST_BUILD="${{ inputs.is_test_build }}"
          if [[ "${{ steps.branch_name.outputs.branch }}" != release/* ]] && [ "$IS_TEST_BUILD" != "false" ]; then
            IS_TEST_BUILD="true"
          fi
          
          IFS=' ' read -r -a image_array <<< "${{ inputs.images }}"
          ./ops/docker-publish.sh "${{ inputs.release }}" "${{ inputs.tag }}" "$CUSTOM_TAG" "$IS_TEST_BUILD" "${image_array[@]}"
